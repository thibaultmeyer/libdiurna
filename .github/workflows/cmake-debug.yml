name: CMake

on: [ push ]

env:
    # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
    BUILD_TYPE: Debug

jobs:
    build-linux:
        name: Linux

        # The CMake configure and build commands are platform agnostic and should work equally
        # well on Windows or Mac.  You can convert this to a matrix build if you need
        # cross-platform coverage.
        # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
        runs-on: ubuntu-latest

        strategy:
            matrix:
                target_arch: [ aarch64, arm, ppc64le, s390x, i686, x86_64 ]

        steps:
            -   name: Clone repository
                uses: actions/checkout@v2

            -   name: Create Build Environment
                run: |
                    sudo apt-get install valgrind libcunit1-dev
                    # Some projects don't allow in-source building, so create a separate build directory
                    # We'll use this as our working directory for all subsequent commands
                    cmake -E make_directory ${{github.workspace}}/build
            -   name: Configure CMake
                # Use a bash shell so we can use the same syntax for environment variable
                # access regardless of the host operating system
                shell: bash
                working-directory: ${{github.workspace}}/build
                # Note the current convention is to use the -S and -B options here to specify source
                # and build directories, but this is only available with CMake 3.13 and higher.
                # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
                run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

            -   name: Build
                working-directory: ${{github.workspace}}/build
                shell: bash
                # Execute the build.  You can specify a specific target with "--target <NAME>"
                run: cmake --build . --config $BUILD_TYPE

            -   name: Test
                working-directory: ${{github.workspace}}/build
                shell: bash
                # Execute the build.  You can specify a specific target with "--target <NAME>"
                run: ./lib-diurna-test

    build-macos:
        name: MacOS

        runs-on: macos-latest

        strategy:
            matrix:
                target_arch: [ x86_64 ]

        steps:
            -   name: Clone repository
                uses: actions/checkout@v2

            -   name: Create Build Environment
                run: |
                    # Some projects don't allow in-source building, so create a separate build directory
                    # We'll use this as our working directory for all subsequent commands
                    cmake -E make_directory ${{github.workspace}}/build
            -   name: Configure CMake
                # Use a bash shell so we can use the same syntax for environment variable
                # access regardless of the host operating system
                shell: bash
                working-directory: ${{github.workspace}}/build
                # Note the current convention is to use the -S and -B options here to specify source
                # and build directories, but this is only available with CMake 3.13 and higher.
                # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
                run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

            -   name: Build
                working-directory: ${{github.workspace}}/build
                shell: bash
                run: cmake --build . --config $BUILD_TYPE

            -   name: Test
                working-directory: ${{github.workspace}}/build
                shell: bash
                run: ./lib-diurna-test
