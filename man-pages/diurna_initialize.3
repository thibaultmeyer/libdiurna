.TH DIURNA_INITIALIZE 3 2021-10-13 "" "Linux Programmer's Manual"
.SH NAME
diurna_initialize, diurna_initialize_ex \- Initializes Diurna
.SH LIBRARY
Diurna C Library (diurna, -ldiurna)
.SH SYNOPSIS
.nf
.B #include <diurna.h>
.PP
.BI ""int " diurna_initialize(const char* " app_name ",
.RS 22
.BI "enum e_diurna_log_level " log_level );
.RE
.PP
.BI ""int " diurna_initialize_ex(const char* " app_name ",
.RE
.RS 25
.BI "enum e_diurna_log_level " log_level ",
.RE
.RS 25
.BI "struct s_diurna_appender " appender );
.RE
.PP
.PP
.BI  typedef " " struct " " s_diurna_appender " " {
.RE
.RS 5
.BI void* " " "             "ctx;
.RE
.RS 5
.BI    f_appender_write " " "  "f_write;
.RE
.RS 5
.BI    f_appender_destroy " " ""f_destroy;
.RE
.RS 0
.BI } " " s_diurna_appender;
.RE
.PP
.PP
.BI ""typedef " void (* " f_appender_write ") (void* "ctx,
.RE
.RS 35
.BI "const char * " app_name ",
.RE
.RS 35
.BI "const enum " e_diurna_log_level ",
.RE
.RS 35
.BI "const struct timeval * const " tv ",
.RE
.RS 35
.BI "const char * " log_msg );
.RE
.PP
.PP
.BI ""typedef " void (* " f_appender_destroy ") (void* "ctx );
.RE
.PP
.BI "typedef enum " e_diurna_log_level " {
.RS 4
.BI DIURNA_LOGLEVEL_DEBUG,
.RE
.RS 4
.BI DIURNA_LOGLEVEL_INFO,
.RE
.RS 4
.BI DIURNA_LOGLEVEL_WARN,
.RE
.RS 4
.BI DIURNA_LOGLEVEL_ERROR
.RE
.RS 0
.BI } " e_diurna_log_level";
.RE
.SH DESCRIPTION
The
.BR diurna_initialize()
and
.BR diurna_initialize_ex()
functions initialize Diurna logging library.
.BR diurna_initialize()
use by default the "console" appender.
.SH RETURN VALUE
On success,
.BR diurna_initialize()
and
.BR diurna_initialize_ex ()
functions return zero; on error, these functions return an error number.
.SH ERRORS
.BR diurna_initialize()
and
.BR diurna_initialize_ex ()
can fail with the following error:
.TP
.B DIURNA_E_NOMEMORY
Out of memory.
.TP
.B DIURNA_E_THREADCREATION
Can't create the log consumer thread.
.TP
.B DIURNA_E_INVALIDAPPENDER
Appender is invalid.
.SH SEE ALSO
.ad l
.nh
.BR diurna_initialize (3),
.BR diurna_initialize_ex (3),
.BR diurna_destroy (3),
.BR diurna_cfg_appender_register (3),
.BR diurna_cfg_appender_unregister_all (3),
.BR diurna_cfg_loglevel_set (3),
.BR diurna_version_as_int (3),
.BR diurna_version_as_str (3),
.BR diurna_debug (3),
.BR diurna_info (3),
.BR diurna_warn (3),
.BR diurna_error (3)
