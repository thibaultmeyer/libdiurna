name: CMake

on: [ push ]

env:
    BUILD_TYPE: Debug

jobs:
    build-linux:
        name: Linux

        runs-on: ubuntu-latest

        strategy:
            matrix:
                target_arch: [ aarch64, arm, ppc64le, s390x, i686, x86_64 ]

        steps:
            -   name: Clone repository
                uses: actions/checkout@v2

            -   name: Create Build Environment
                run: |
                    sudo apt-get install valgrind libcunit1-dev
                    # Some projects don't allow in-source building, so create a separate build directory
                    # We'll use this as our working directory for all subsequent commands
                    cmake -E make_directory ${{github.workspace}}/build

            -   name: Configure CMake
                shell: bash
                working-directory: ${{github.workspace}}/build
                run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

            -   name: Build
                working-directory: ${{github.workspace}}/build
                shell: bash
                run: cmake --build . --config $BUILD_TYPE

            -   name: Test
                working-directory: ${{github.workspace}}/build
                shell: bash
                run: ./lib-diurna-test

            -   name: Test (With Valgrind)
                working-directory: ${{github.workspace}}/build
                shell: bash
                run: VALGRIND_OPTS='--leak-check=full --leak-resolution=med --track-origins=yes --show-leak-kinds=all --vgdb=no' valgrind ./lib-diurna-test

    build-macos:
        name: MacOS

        runs-on: macos-latest

        strategy:
            matrix:
                target_arch: [ x86_64 ]

        steps:
            -   name: Clone repository
                uses: actions/checkout@v2

            -   name: Create Build Environment
                run: |
                    # Some projects don't allow in-source building, so create a separate build directory
                    # We'll use this as our working directory for all subsequent commands
                    cmake -E make_directory ${{github.workspace}}/build

            -   name: Configure CMake
                shell: bash
                working-directory: ${{github.workspace}}/build
                run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

            -   name: Build
                working-directory: ${{github.workspace}}/build
                shell: bash
                run: cmake --build . --config $BUILD_TYPE

            -   name: Test
                working-directory: ${{github.workspace}}/build
                shell: bash
                run: ./lib-diurna-test
